datasource db {
  provider = "postgresql"
  url      = env("DB_URL_POSTGRES")
}

generator client {
  provider = "prisma-client-js"
}

model Direction {
  id       Int        @id @default(autoincrement())
  name     String
  Practice Practice[]

  @@map("practice_directions")
}

model Role {
  id           Int               @id @default(autoincrement())
  name         String
  access_level Int               @default(0)
  is_default   Boolean           @default(false)
  users        RoleAssignments[] @relation("RoleAssignmentToRole")

  @@map("roles")
}

model Group {
  id     Int      @id @default(autoincrement())
  name   String
  Person Person[]

  @@map("groups")
}

model Practice {
  id           Int          @id @default(autoincrement())
  name         String
  direction    Int
  direction_id Direction    @relation(fields: [direction], references: [id])
  start_date   DateTime     @db.Date
  end_date     DateTime     @db.Date
  type         PracticeType @default(production)

  practiceAssignments PracticeAssignments[] @relation("PracticeAssignmentsOnPractice")
  reports Report[] @relation("ReportPractice")

  @@map("practices")
}

model Person {
  id           Int             @id @default(autoincrement())
  first_name   String
  last_name    String
  second_name  String?
  photo        String?
  phone_number String?
  email        String?
  position     PersonPosition? @default(student)
  group_id     Int?
  group        Group?          @relation(fields: [group_id], references: [id])
  comment      String?         @db.Text
  created_at   DateTime        @db.Timestamp()
  updated_at   DateTime        @db.Timestamp()
  Enterprise   Enterprise[]
  User         User?

  responsibles PracticeAssignments[] @relation("PracticeAssignmentsOnResponsible")
  mentors      PracticeAssignments[] @relation("PracticeAssignmentsOnMentor")
  students     PracticeAssignments[] @relation("PracticeAssignmentsOnStudent")
  reportMentors Report[] @relation("ReportMentor")
  reportStudents Report[] @relation("ReportStudent")

  @@map("persons")
}

model Enterprise {
  id                Int     @id @default(autoincrement())
  representative_id Int
  representative    Person  @relation(fields: [representative_id], references: [id])
  legal_form        String
  name              String
  ogrn              String?
  inn               String?
  phone_number      String?
  email             String?
  legal_address     String?
  comment           String? @db.Text

  practiceAssignments PracticeAssignments[] @relation("PracticeAssignmentsOnEnterprise")

  @@map("enterprises")
}

model User {
  id         Int               @id @default(autoincrement())
  person_id  Int               @unique
  person     Person            @relation(fields: [person_id], references: [id])
  username   String
  login      String
  password   String
  token      String
  created_at DateTime          @db.Timestamp()
  updated_at DateTime          @db.Timestamp()
  roles      RoleAssignments[] @relation("RoleAssignmentToUser")

  @@map("users")
}

model Report {
  id          Int            @id @default(autoincrement())
  practice_id Int
  practice Practice @relation("ReportPractice", fields: [practice_id], references: [id])
  mentor_id   Int
  mentor Person @relation("ReportMentor", fields: [mentor_id], references: [id])
  student_id  Int
  student Person @relation("ReportStudent", fields: [student_id], references: [id])
  date        DateTime       @db.Date
  estimation  EstimationType
  comment     String?        @db.Text

  @@map("practice_reports")
}

// Assignments

model RoleAssignments {
  user_id Int
  user    User @relation("RoleAssignmentToUser", fields: [user_id], references: [id])
  role_id Int
  role    Role @relation("RoleAssignmentToRole", fields: [role_id], references: [id])

  @@id([user_id, role_id])
  @@map("role_assignments")
}

model PracticeAssignments {
  id              Int        @id @default(autoincrement())
  practice_id     Int
  practice        Practice   @relation("PracticeAssignmentsOnPractice", fields: [practice_id], references: [id])
  enterprise_id   Int
  enterprise      Enterprise @relation("PracticeAssignmentsOnEnterprise", fields: [enterprise_id], references: [id])
  responsible_id  Int
  responsible     Person     @relation("PracticeAssignmentsOnResponsible", fields: [responsible_id], references: [id])
  mentor_id       Int
  mentor          Person     @relation("PracticeAssignmentsOnMentor", fields: [mentor_id], references: [id])
  student_id      Int
  student         Person     @relation("PracticeAssignmentsOnStudent", fields: [student_id], references: [id])
  contract_number String

  @@map("practice_assignments")
}

// Enums

enum PersonPosition {
  student
  responsible
  representative
  mentor
  admin
}

enum PracticeType {
  education
  production
}

enum EstimationType {
  two
  three
  four
  five
  absent
}
